{
	"info": {
		"_postman_id": "d2861e9f-c994-43aa-b449-f023eff0b824",
		"name": "Book - Get By Title",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39100411",
		"_collection_link": "https://tcss462.postman.co/workspace/TCSS462-Workspace~398c174b-dbb4-4b66-88ca-3c20b823525f/collection/38698877-d2861e9f-c994-43aa-b449-f023eff0b824?action=share&source=collection_link&creator=39100411"
	},
	"item": [
		{
			"name": "get book by title bad param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response does NOT include specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"message\")\r",
							"    pm.expect(response.message).to.equal(\"Title was not provided.\")\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{valid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:4000/book/title?title",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"book",
						"title"
					],
					"query": [
						{
							"key": "title",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get book by title not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response does NOT include specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"message\")\r",
							"    pm.expect(response.message).to.equal(\"No books found for that given title.\")\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{valid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:4000/book/title?title=sdknfsjkdbg",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"book",
						"title"
					],
					"query": [
						{
							"key": "title",
							"value": "sdknfsjkdbg"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book by title good params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response includes all required\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const firstBook = response.entries[0];\r",
							"    pm.expect(firstBook).to.have.ownProperty('isbn13'); \r",
							"    pm.expect(firstBook).to.have.ownProperty('authors');\r",
							"    pm.expect(firstBook).to.have.ownProperty('publication');\r",
							"    pm.expect(firstBook).to.have.ownProperty('title'); \r",
							"    pm.expect(firstBook).to.have.ownProperty('ratings');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('average');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('count');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('rating_1');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('rating_2');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('rating_3');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('rating_4');\r",
							"    pm.expect(firstBook.ratings).to.have.ownProperty('rating_5');\r",
							"    pm.expect(firstBook).to.have.ownProperty('icons');\r",
							"    pm.expect(firstBook.icons).to.have.ownProperty('large');\r",
							"    pm.expect(firstBook.icons).to.have.ownProperty('small');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{valid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:4000/book/title?title=Harry",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"book",
						"title"
					],
					"query": [
						{
							"key": "title",
							"value": "Harry"
						}
					]
				}
			},
			"response": []
		}
	]
}